version: "3.9"
services:
  api_gateway:
    build:
      context: .
      dockerfile: docker/Dockerfile.api_gateway
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user_service:
    build:
      context: .
      dockerfile: docker/Dockerfile.user_service
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - db

  financial_service:
    build:
      context: .
      dockerfile: docker/Dockerfile.financial_service
    ports:
      - "5002:5002"
    environment:
      - FLASK_ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - db

  chat_service:
    build:
      context: .
      dockerfile: docker/Dockerfile.chat_service
    ports:
      - "5003:5003"
    environment:
      - FLASK_ENV=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4
    depends_on:
      - db

  partner_service:
    build:
      context: .
      dockerfile: docker/Dockerfile.partner_service
    ports:
      - "5004:5004"
    environment:
      - FLASK_ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - db

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:

name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-build-push:
    name: Lint, Test, Build, and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          npm install
          npm install --save react-router-dom

      # Step 4: Build frontend
      - name: Build Frontend
        working-directory: ./frontend
        run: |
          npm run build

      # Step 5: Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Log in to GCR
        run: |
          gcloud auth configure-docker --quiet

      # Step 6: Build and Push Docker Images
      - name: Build and Push Docker Images
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | head -c7)

          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/api_gateway:$IMAGE_TAG -f docker/Dockerfile.api_gateway .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/api_gateway:$IMAGE_TAG

          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/user_service:$IMAGE_TAG -f docker/Dockerfile.user_service .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/user_service:$IMAGE_TAG

          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/financial_service:$IMAGE_TAG -f docker/Dockerfile.financial_service .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/financial_service:$IMAGE_TAG

          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/chat_service:$IMAGE_TAG -f docker/Dockerfile.chat_service .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/chat_service:$IMAGE_TAG

          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/partner_service:$IMAGE_TAG -f docker/Dockerfile.partner_service .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/partner_service:$IMAGE_TAG
          
          docker build -t hamoum/lfsd:latest -f docker/Dockerfile.lfsd .
          docker push hamoum/lfsd:latest

      # Optional: Notify Success
      - name: Notify Success
        if: success()
        run: echo "Pipeline completed successfully!"

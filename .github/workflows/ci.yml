name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-build-push:
    name: Lint, Test, Build, and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install Dependencies and Generate Lock File
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          npm install --save-dev @vitejs/plugin-react
          npm ci --package-lock-only

      # Step 4: Cache Dependencies
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 5: Build Frontend
      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      # Step 6: Authenticate and Build Docker Images
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Log in to GCR
        run: gcloud auth configure-docker --quiet

      - name: Build and Push Docker Images
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | head -c7)
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:$IMAGE_TAG -f docker/Dockerfile.lfsd .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:$IMAGE_TAG

      # Optional: Notify Success
      - name: Notify Success
        if: success()
        run: echo "Pipeline completed successfully!"
